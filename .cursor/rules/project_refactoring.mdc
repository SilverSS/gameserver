# Project-wide Refactoring Rules

- 어떤 파일을 수정하거나 새로운 기능을 추가할 때, 반드시 해당 파일(또는 관련 파일)에 이미 동일하거나 유사한 로직/핸들러/이벤트/함수가 존재하는지 먼저 조사한다.
- 중복 또는 유사한 로직이 있다면, 새로운 코드를 추가하지 않고 기존 코드를 리팩토링하거나 통합하는 방식을 우선적으로 적용한다.
- 불필요한 중복, 이벤트 중복 연결, 유사 함수의 다중 존재 등을 방지한다.
- 리팩토링 시에는 코드 일관성, 유지보수성, 가독성을 최우선으로 고려한다.
- 이 규칙은 모든 서브 프로젝트(서버, 클라이언트, 타입 등)에 공통 적용한다.
- **요청/응답 처리에 대한 수정 요청이 있을 때는 반드시 game_server와 Unity6_TestClient 등 매칭되는 모든 프로젝트의 로직을 함께 검토 및 수정한다.**

- 중복 또는 유사한 로직이 있다면, 새로운 코드를 추가하지 않고 기존 코드를 리팩토링하거나 통합하는 방식을 우선적으로 적용한다.
- 불필요한 중복, 이벤트 중복 연결, 유사 함수의 다중 존재 등을 방지한다.
- 리팩토링 시에는 코드 일관성, 유지보수성, 가독성을 최우선으로 고려한다.
- 이 규칙은 모든 서브 프로젝트(서버, 클라이언트, 타입 등)에 공통 적용한다.
